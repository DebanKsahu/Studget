from datetime import date, datetime, timezone

from pydantic import BaseModel, Field

transaction_category_description = (
    "The category or categories of the transaction. "
    "If multiple categories are identified from the user's query, "
    "they must be combined into a single string, sorted alphabetically, "
    "and separated by a space (e.g., 'Entertainment Food')."
)
    
start_date_description = (
    "The start date for the query's time range, formatted as 'YYYY-MM-DD'. "
    "This represents the first day of the period the user is asking about."
)

end_date_description = (
    "The end date for the query's time range, formatted as 'YYYY-MM-DD'. "
    "This represents the last day of the period the user is asking about."
)

class QueryInfo(BaseModel):
    """A structured representation of a user's expense query."""
    transaction_category: str = Field(description=transaction_category_description)
    start_date: date = Field(description=start_date_description, default_factory=lambda : datetime.now(timezone.utc))
    end_date: date = Field(description=end_date_description, default_factory=lambda : datetime.now(timezone.utc))

class ExpenseAnalyzeInfo(BaseModel):
    """
    Represents a formatted response from the LLM system.
    """
    llm_response: str = Field(description="The final response generated by the LLM.")